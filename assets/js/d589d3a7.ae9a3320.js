"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[924],{6475:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"getting-started","title":"Getting Started: Your First Scene","description":"Welcome to the Inceptor Framework! This guide will walk you through the entire process of creating your first simple, interactive scene. By the end of this tutorial, you will have a working scene that you can build upon.","source":"@site/docs/getting-started.md","sourceDirName":".","slug":"/getting-started","permalink":"/docs/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/Advanced-Reality-Lab/inceptor/edit/main/packages/docs/docs/getting-started.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Core Concepts & Philosophy","permalink":"/docs/core-concepts"},"next":{"title":"Using the Clip Explorer","permalink":"/docs/using-clip-explorer"}}');var r=n(4848),s=n(8453);const o={sidebar_position:3},l="Getting Started: Your First Scene",c={},a=[{value:"Step 1: Installing the Unity Package",id:"step-1-installing-the-unity-package",level:2},{value:"Step 2: Writing Your First Script",id:"step-2-writing-your-first-script",level:2},{value:"Step 3: Saving Your Script",id:"step-3-saving-your-script",level:2},{value:"Step 4: Using the Inceptor Wizard in Unity",id:"step-4-using-the-inceptor-wizard-in-unity",level:2}];function h(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"getting-started-your-first-scene",children:"Getting Started: Your First Scene"})}),"\n",(0,r.jsx)(t.p,{children:"Welcome to the Inceptor Framework! This guide will walk you through the entire process of creating your first simple, interactive scene. By the end of this tutorial, you will have a working scene that you can build upon."}),"\n",(0,r.jsx)(t.p,{children:"We'll cover the three main stages:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.em,{children:"Installation:"})," Adding the Inceptor package to your Unity project."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.em,{children:"Authoring:"})," Using the Clip Explorer to write a script and generate a .json file."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.em,{children:"Generation:"})," Using the Inceptor Wizard in Unity to turn your script into a 3D scene."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"step-1-installing-the-unity-package",children:"Step 1: Installing the Unity Package"}),"\n",(0,r.jsx)(t.p,{children:"The Inceptor Framework is a standard Unity package. The easiest way to install it is directly from its GitHub repository using the Unity Package Manager."}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Open your Unity project."}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Go to Window > Package Manager."}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:'In the Package Manager window, click the "+" icon in the top-left corner and select "Add package from git URL...".'}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:'Paste the following URL into the text box and click "Add":'}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.code,{children:"https://github.com/Advanced-Reality-Lab/inceptor.git"})}),"\n",(0,r.jsx)(t.p,{children:"Unity will now download and install the package. You'll see a new \"Inceptor\" menu item appear at the top of your screen when it's finished."}),"\n",(0,r.jsx)(t.h2,{id:"step-2-writing-your-first-script",children:"Step 2: Writing Your First Script"}),"\n",(0,r.jsx)(t.p,{children:"Now, let's create the narrative. We'll use the Clip Explorer, our web-based authoring tool."}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Open the Clip Explorer: ",(0,r.jsx)(t.a,{href:"https://explorer.useinceptor.com",children:"Clip Explorer"})]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:'Open the Text-to-JSON Tool: Click the "Text-to-JSON" button in the toolbar.'}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Write Your Script: A modal will appear with a placeholder script. For this tutorial, let's use a very simple script. Copy and paste the following text into the text area:"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"Nirit: Hello and welcome to your first Inceptor scene!\n\n[CHOICE]\nThis is your first choice. Which button will you press?\n- The left button.\nAssistant: You pressed the left button!\n- The right button.\nAssistant: You pressed the right button!\n\nNirit: Great job! That's the end of this simple demonstration.\n"})}),"\n",(0,r.jsxs)(t.ol,{start:"4",children:["\n",(0,r.jsx)(t.li,{children:'Convert and Load: Click the "Convert and Load Script" button. You will now see your simple, branching narrative visualized in the Clip Map!'}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"step-3-saving-your-script",children:"Step 3: Saving Your Script"}),"\n",(0,r.jsx)(t.p,{children:"With your script loaded in the Clip Explorer, you just need to save it to your computer."}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:'Click the "Save Script" button in the toolbar.'}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"This will download a file named cinematicScript.json. Save this file somewhere you can easily find it,Preferably the Unity project's Assets folder."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"step-4-using-the-inceptor-wizard-in-unity",children:"Step 4: Using the Inceptor Wizard in Unity"}),"\n",(0,r.jsx)(t.p,{children:"Now for the final step: bringing your script to life in Unity."}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Open the Wizard: Back in your Unity project, go to Inceptor > Import Cinematic Script. This will open the Inceptor Wizard."}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:'Import Your Script: The wizard\'s first step will prompt you to import a file. Click the "Import Script" button and select the cinematicScript.json file you just downloaded.'}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:'Assign Characters: The wizard will now move to the "Verify Characters" step. It has correctly identified that your script has two characters: "Nirit" and "Assistant." For this test, let\'s assign simple placeholders:'}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:'For "Nirit," click the object picker next to "Game Model" and assign a simple Cube primitive.'}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:'For "Assistant," assign a Sphere primitive.'}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:'Confirm and Build: Click "Confirm Characters," then "Confirm Animations." Finally, on the "Meta Settings" tab, click the "Complete Wizard" button.'}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Step 5: Press Play!\nThe wizard will close, and you will now see an Inceptor GameObject and your two character objects (the cube and the sphere) in your scene hierarchy."}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Press the Play button in Unity. You will see your interactive scene come to life, driven by the script you wrote! Congratulations, you've just created your first Inceptor scene."}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>l});var i=n(6540);const r={},s=i.createContext(r);function o(e){const t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);